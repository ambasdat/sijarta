<main class="card shadow-xl max-w-screen-xl mx-auto my-24 bg-neutral text-neutral-content">
  <div class="flex w-full flex-col">
      <div class="card-body">
          <h1 class="stat-value text-center">
              Pesanan Jasa
          </h1>
      </div>

      <div class="divider"></div>

        <form action="/pekerjaan/" method="GET" class="card-body form-control grid grid-cols-3 items-end gap-4 w-full">

            <!-- Dropdown for "Kategori" -->
            <label for="kategori" class="form-control">
                <div class="label">
                    <span class="label-text">Kategori</span>
                </div>

                <select id="kategori" name="kategori" class="select select-primary w-full max-w-xs" required>
                <option value="" disabled selected>Pilih Kategori</option>
                <option value="0" {{#if (eq "0" ../selectedKategori)}}selected{{/if}}>Semua</option>
                {{#each pekerjaKategoriDict}}
                    <option value="{{ this.kid }}" {{#if (eq this.kid ../selectedKategori)}}selected{{/if}}>{{ this.kname }}</option>
                {{/each}}
                </select>
            </label>

            <!-- Dropdown for "Sub Kategori" -->
            <label for="subkategori" class="form-control">
                <div class="label">
                    <span class="label-text">Sub Kategori</span>
                </div>

                <select id="subkategori" name="subkategori" class="select select-secondary w-full max-w-xs" required disabled>
                <option value="" disabled selected>Pilih Sub Kategori</option>
                <option value="0">Semua</option>
                </select>
            </label>
        
            <!-- Search Button -->
            <button type="submit" id="searchButton" class="btn btn-warning">Search</button>
        </form>

      <div class="divider divider-warning px-5">Result</div>

      <!-- Orders Section -->
      <div id="ordersContainer" class="grid gap-4 p-5">
          {{#each orderResult}}
          <!-- Dummy data rows will appear here -->
          <div class="card shadow-xl bg-base-100 p-4 rounded shadow-md grid grid-cols-3 items-center gap-1">
            <div>
                <p class="font-semibold">{{ this.namasubkategorijasa }}</p>
                <p class="text-sm stat-title p-1">Tgl pemesanan: {{ this.tglpemesanan }}</p>
                <p class="text-sm stat-title p-1">Tgl pekerjaan: {{ this.tglpekerjaan }}</p>
            </div>
            <div>
                <p class="font-semibold">{{this.namapelanggan}}</p>
            </div>
            <div class="grid grid-cols-2 items-center justify-between gap-4">
                <p class="font-bold">{{ this.totalbiaya }}</p>
                <form id="kerjakan-form" action="/pekerjaan/kerjakan" method="POST">
                    <input type="" name="idtrpemesanan" value="{{ this.idtrpemesanan }}">
                    <button type="submit" class="btn btn-warning">Kerjakan Pesanan</button>
                </form>
            </div>
          </div>
          {{/each}}
      </div>

  </div>
</main>

<script>
    // ----------------- DYNAMICALLY RENDER SUBCATEGORIES -----------------
    const pekerja_kategori_dict = {{{ pekerjaKategoriDictJson }}};
    const selectedKategori = "{{ selectedKategori }}"; 
    const selectedSubkategori = "{{ selectedSubkategori }}";

    const kategoriSelect = document.getElementById("kategori");
    const subkategoriSelect = document.getElementById("subkategori");

    // Update the Sub Kategori options based on the selected Kategori
    kategoriSelect.addEventListener("change", (e) => {
        const selectedKategori = e.target.value;

        // Reset the subkategori options
        subkategoriSelect.innerHTML = `
            <option value="" disabled selected>Pilih Sub Kategori</option>
            <option value="0">Semua</option>
        `;

        // Enable subkategori dropdown only if a valid kategori is selected
        if (selectedKategori && selectedKategori !== "0") {
            subkategoriSelect.disabled = false;

            // Find the selected kategori object
            const kategori = pekerja_kategori_dict.find((k) => k.kid === selectedKategori);

            // Populate the subkategori options
            if (kategori && kategori.subkategori) {
                for (const [subname, subid] of Object.entries(kategori.subkategori)) {
                    const option = document.createElement("option");
                    option.value = subid;
                    option.textContent = subname;

                    // Pre-select the subkategori if it matches the selectedSubkategori
                    if (subid === selectedSubkategori) {
                        option.selected = true;
                    }

                    subkategoriSelect.appendChild(option);
                }
            }
        } else {
            // Disable subkategori if "Semua" is selected
            subkategoriSelect.disabled = true;
        }
    });

    // Trigger the change event once to populate the subkategori options correctly on load
    kategoriSelect.dispatchEvent(new Event("change"));
</script>

