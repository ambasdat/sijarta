<main class="card shadow-xl max-w-screen-xl mx-auto my-24 bg-neutral text-neutral-content">
    <div class="flex w-full flex-col">
        <div class="card-body">
            <h1 class="stat-value text-center">
                Pekerjaan Jasa
            </h1>
        </div>

        <div class="card-body form-control grid grid-cols-3 items-end gap-4 w-full">

            ...

            <!-- Dropdown for "Status" -->
            <label for="status" class="form-control">
                <div class="label">
                    <span class="label-text">Status</span>
                </div>

                <select id="status" name="status" class="select select-primary w-full max-w-xs" required>
                    <option disabled selected>Pilih Status</option>
                    <option value="1">Pekerja Tiba Di Lokasi</option>
                    <option value="2">Menunggu Pekerja Berangkat</option>
                    <option value="3">Pelayanan Jasa Sedang Dilakukan</option>
                    <option value="4">Pesanan Dibatalkan</option>
                    <option value="5">Pesanan Selesai</option>
                </select>
            </label>
        
            <!-- Search Button -->
            <button id="searchButton" class="btn btn-warning">Search</button>
        </div>

        <div class="divider divider-info px-5">Result</div>

        <!-- Jobs Section -->
        <div id="jobsContainer" class="grid gap-4 p-5">
            <!-- Dummy data rows will appear here -->
        </div>

    </div>
</main>

<script>
    
    // Dummy data
    const jobs = {{{jobs}}};
    
    // Render jobs dynamically
    function renderJobs(data) {
      jobsContainer.innerHTML = ""; // Clear previous results
      data.forEach((job) => {
        jobsContainer.innerHTML +=`
        <div class="card shadow-xl bg-base-100 p-4 rounded shadow-md grid grid-cols-3 items-center gap-1">
            <div>
                <p class="font-semibold">${job.subkategori}</p>
                <p class="text-sm stat-title p-1">Tgl pemesanan: ${job.tanggalPemesanan}</p>
                <p class="text-sm stat-title p-1">Tgl pekerjaan: ${job.tanggalPekerjaan}</p>
            </div>
            <div>
                <p class="font-semibold">${job.namaPelanggan}</p>
            </div>
            <div class="grid grid-cols-2 items-center justify-between gap-4">
                <p class="font-bold">${job.totalBiaya}</p>
                <div class="flex flex-col">
                    <p class="font-semibold text-center">${job.statusPesanan}</p>
                    <button class="btn btn-warning">Update Status</button>
                </div>
            </div>
        </div>
        `
        });
    }
    
    // Initial render
    renderJobs(jobs);

    // Status code mapping
    const statusMapping = {
        1: "Pekerja Tiba Di Lokasi",
        2: "Menunggu Pekerja Berangkat",
        3: "Pelayanan Jasa Sedang Dilakukan",
        4: "Pesanan Dibatalkan",
        5: "Pesanan Selesai"
    };
    
    // Search functionality
    document.getElementById("searchButton").addEventListener("click", () => {
        const statusSelect = document.getElementById("status");
        const selectedStatus = statusSelect.value;
    
        // If a status is selected, filter by status code
        const filteredJobs = jobs.filter((job) => {
            const matchesStatus = selectedStatus
                ? job.statusPesanan === statusMapping[selectedStatus]
                : true;
            return matchesStatus;
        });
    
        renderJobs(filteredJobs);
    });
</script>